.pictorial
  margin-top: 30px
  width: 100%
  p, .constrain-width
    max-width: 800px

  h3
    margin-bottom: 10px

.full-screen-image
  margin-top: 30px
  margin-bottom: 30px

.pictorial-image
  background-size: cover
  background-position: center
  height: 100%
  height: 110vh

.full-screen-image,
.half-screen-image--left
  margin-left: -$small-spacing
  +at(900)
    margin-left: -$mid-spacing
  +at(1000)
    margin-left: -$large-spacing

.half-screen-image--right
  margin-right: -$small-spacing
  +at(900)
    margin-right: -$mid-spacing
  +at(1000)
    margin-right: -$large-spacing

.pictorial-image
  display: flex
  align-items: flex-end
  justify-content: center
  .half-screen-image > &
    width: 100vw
    +at(600)
      width: 50vw

  .full-screen-image > &
    width: 100vw

.half-screen-image
  & + p, & + p + p
    max-width: none

  & + p + p + p
    clear: both

.half-screen-image--left
  margin-bottom: 30px
  +at(600)
    margin-right: 30px
    float: left

.half-screen-image--right
  margin-bottom: 30px
  +at(600)
    margin-left: 30px
    float: right


.image-with-fg-text
  position: relative
  &:before
    content: ''
    position: absolute
    bottom: 0
    width: 100%
    height: 150px
    +image-overlay-gradient($color-start: #111, $color-end: #111, $stop: 100%)

  &.full-screen-image
    &:before
      padding-left: $small-spacing
      +at(900)
        padding-left: $mid-spacing
      +at(1000)
        padding-left: $large-spacing

  &.half-screen-image
    &:before
      padding-left: $small-spacing
      +at(600)
        padding-left: 0

  figcaption
    color: white
    margin-bottom: 20px
    z-index: 1


// Images

@mixin retinafy()
  @media (-webkit-min-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6 / 2), (min--moz-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)
    @content

@mixin responsive-image($path: '', $extension: 'jpg')
  $sizes: "600", "1000", "1600"

  @each $size in $sizes
    $index: index($sizes, $size)

    // Default is the smallest
    @if $index == 1
      background-image: url("#{'#{$path}-#{nth($sizes, 1)}.#{$extension}'}")
      +retinafy()
        background-image: url("#{'#{$path}-#{nth($sizes, 2)}.#{$extension}'}")
    @else
      // Set the min-width to the width below the current image size
      @media only screen and (min-width: nth($sizes, $index - 1) + px)
        background-image: url("#{'#{$path}-#{nth($sizes, $index)}.jpg'}")

.image-brockwell-lido
  +responsive-image('/images/photos/brockwell')

.image-salford
  +responsive-image('/images/photos/salford')

.image-olympic-park
  +responsive-image('/images/photos/olympic-park')

.image-south-downs
  +responsive-image('/images/photos/south-downs')

.image-greenwich
  +responsive-image('/images/photos/greenwich')

.image-chamonix-cloud
  +responsive-image('/images/photos/chamonix-cloud')

.image-registration
  +responsive-image('/images/photos/registration')
